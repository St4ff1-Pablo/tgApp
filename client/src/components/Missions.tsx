import React, { useState } from 'react';
import { useUserContext } from './UserContext';
import axios from 'axios';

const Missions = () => {
  const { userId, coins, refreshUserData } = useUserContext();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏—Å—Å–∏–π
  const [missions, setMissions] = useState([
    { id: 1, text: "Subscribe to the Telegram channel", completed: false, reward: { coins: 500 } },
    { id: 2, text: "Reach level 5", completed: false, reward: { gems: 1 } },
    { id: 3, text: "Complete Arena 1", completed: false, reward: { coins: 100 } },
    { id: 4, text: "Subscribe to Instagram", completed: false, reward: { coins: 500 } }
  ]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∏—Å—Å–∏–∏
  const handleCompleteMission = async (missionId: number) => {
    const mission = missions.find(m => m.id === missionId);
    if (!mission || mission.completed) return; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –º–∏—Å—Å–∏—è –∏ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –æ–Ω–∞

    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      const { coins: rewardCoins, gems: rewardGems } = mission.reward;
      await axios.patch(
        `https://56e4-158-195-196-54.ngrok-free.app/users/${userId}`,
        {
          coins: coins + (rewardCoins || 0),
        },
        {
          headers: {
            "ngrok-skip-browser-warning": "true"
          }
        }
      );

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∏—Å—Å–∏–∏
      setMissions(prevMissions =>
        prevMissions.map(m =>
          m.id === missionId ? { ...m, completed: true } : m
        )
      );

      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
      refreshUserData?.();

      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–≥—Ä–∞–¥–µ
      if (rewardCoins) alert(`Mission completed! You received ${rewardCoins} coins.`);
      if (rewardGems) alert(`Mission completed! You received ${rewardGems} gem(s).`);
    } catch (error) {
      console.error('Mission completion error:', error);
      alert('Failed to complete mission!');
    }
  };

  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ
  const handleRedirect = (url: string | URL | undefined, missionId: number) => {
    window.open(url, '_blank');
    // –ü–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ –º–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
    handleCompleteMission(missionId);
  };

  return (
    <div className='mission'>
      <h1>Missions</h1>
      <div>
        <h3>Your Rewards:</h3>
        <p>Coins: ü™ô {coins || 0}</p>
      </div>
      {missions.map(mission => (
        <div key={mission.id} style={{ marginBottom: '20px' }}>
          <span>{mission.text}</span>
          {!mission.completed ? (
            <button
              onClick={() => handleRedirect(getMissionUrl(mission.id), mission.id)}
              style={{ marginLeft: '10px', width: '10vw'}}
            >
              Go to Mission
            </button>
          ) : (
            <span style={{ marginLeft: '10px', color: 'green' }}>Completed</span>
          )}
        </div>
      ))}
    </div>
  );
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –º–∏—Å—Å–∏–∏
const getMissionUrl = (missionId: number) => {
  switch (missionId) {
    case 1:
      return 'https://t.me/dftproject';
    case 2:
      return 'https://www.instagram.com/skiere__/'; // –ü—Ä–∏–º–µ—Ä URL –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
    case 3:
      return '/arena-1'; // –ü—Ä–∏–º–µ—Ä URL –¥–ª—è –∞—Ä–µ–Ω—ã
    case 4:
      return 'https://www.instagram.com/skiere__/';
    default:
      return '#';
  }
};

export default Missions;
